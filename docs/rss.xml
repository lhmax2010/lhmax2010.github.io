<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://lhmax2010.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://lhmax2010.github.io</link></image><lastBuildDate>Mon, 04 Aug 2025 07:01:22 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>Android 代码路径分析</title><link>https://lhmax2010.github.io/post/Android%20-dai-ma-lu-jing-fen-xi.html</link><description>| 目录              | 主要功能/内容                                            | 隶属框架/层级                    |
|-------------------|---------------------------------------------------------|-----------------------------------|
| art               | ART 运行环境，字节码编译、JIT/AOT、GC、解释器等          | Native 层（运行时/虚拟机）         |
| bionic            | C/C++ 标准库（libc、libm、libdl）、动态链接器等          | Native 层（基础库/运行时）         |
| bootable          | 各类启动加载器、recovery、fastboot、boot image 工具      | 平台启动/引导                     |
| build             | 构建系统主目录（Make、Soong、Blueprint、工具等）         | 构建系统/工具链                   |
| cts               | 兼容性测试套件 CTS                                       | 测试/兼容性/平台测试               |
| dalvik            | Dalvik VM 相关遗留代码                                   | Native 层（早期虚拟机/历史）        |
| developers        | 开发者文档、示例、工具                                   | 开发辅助/文档/示例                 |
| development       | 开发辅助工具、样例、IDE插件、脚本等                      | 开发工具/辅助层                   |
| device            | 设备/芯片/厂商适配配置与脚本                             | 硬件适配/厂商层                    |
| external          | 第三方/外部依赖库与项目集合（如 openssl、skia 等）       | 第三方依赖/外部库                  |
| frameworks        | Android 框架层主干（Java API、系统服务、媒体、AI等）     | Framework 层（核心API/服务）        |
| hardware          | 硬件抽象层（HAL）、通用硬件接口和库                     | HAL 层/硬件适配                    |
| kernel            | 内核源码/补丁/配置（完整内核需独立下载）                 | Kernel 层/平台基础                 |
| libcore           | Java 标准库实现（java.lang、java.util、io等）            | Framework 层（Java标准库）         |
| libnativehelper   | Java 与 Native 层桥接辅助库（JNI等）                    | Native 层/桥接                     |
| packages          | 系统应用、服务、演示、输入法等                           | 应用层/系统服务                    |
| pdk               | 平台开发套件相关资源与工具                               | 平台兼容/移植/开发工具             |
| platform_testing  | 平台级测试与自动化工具                                   | 测试/平台兼容                      |
| prebuilts         | 预编译工具链、SDK、第三方库等                            | 工具链/外部依赖                    |
| sdk               | Android SDK 工具、API、文档生成等                        | SDK/开发工具                      |
| system            | 系统服务、守护进程、核心库（如 init、vold、netd等）      | Native 层/系统服务                 |
| test              | 各类通用测试用例与测试框架                               | 测试/辅助                          |
| toolchain         | 工具链源码与构建工具                                      | 工具链/开发工具                    |
| tools             | 构建/开发/调试/模拟器/分析等通用工具集                   | 开发/构建/调试/测试工具            |
| vendor            | 各芯片/厂商专用驱动、闭源库、系统扩展                    | 厂商扩展/硬件适配                  |
。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20-dai-ma-lu-jing-fen-xi.html</guid><pubDate>Mon, 04 Aug 2025 06:36:13 +0000</pubDate></item><item><title>未来可以考虑的优化github</title><link>https://lhmax2010.github.io/post/wei-lai-ke-yi-kao-lv-de-you-hua-github.html</link><description>定制 ROM
Corvus OS: 这是一个以游戏为核心的定制 ROM 项目。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/wei-lai-ke-yi-kao-lv-de-you-hua-github.html</guid><pubDate>Sun, 03 Aug 2025 14:04:20 +0000</pubDate></item><item><title>Android Game</title><link>https://lhmax2010.github.io/post/Android%20Game.html</link><description>### AOSP &amp; Google 官方主要模块
| 模块/特性                      | 功能简介                                                         | 主要路径/层级                                              |
|-------------------------------|------------------------------------------------------------------|------------------------------------------------------------|
| Game Mode（游戏模式）          | App声明游戏模式，系统自动切换性能/省电策略                        | frameworks/base/services/core/java/com/android/server/gamemanager/ |
| Game Manager Service           | 管理游戏策略、性能档位、调度及通知                                | frameworks/base/services/core/java/com/android/server/gamemanager/ |
| Game Dashboard/Game Toolbar    | 游戏浮窗、录屏、截图、性能统计、免打扰、工具栏                    | Google Play Games / 系统UI                                 |
| ANGLE (Almost Native Graphics Layer Engine) | OpenGL ES 到 Vulkan 兼容层提升渲染效率               | external/angle/                                            |
| Game Driver（可选GPU驱动）     | Play新GPU驱动，指定游戏专属渲染优化                               | Google Play Services，vendor/                              |
| Game Mode APIs                 | Java/Kotlin API给开发者调整游戏体验                               | android.app.GameManager                                    |
| PerformanceHint API            | 系统性能提示（帧率等）协助资源调度                               | frameworks/base/core/java/android/os/PerformanceHintManager.java |
### Native/Kernel 层优化
| 模块/特性           | 功能简介                          | 主要路径                                     |
|--------------------|-----------------------------------|----------------------------------------------|
| SurfaceFlinger     | 显示合成优化，低延迟高帧率渲染      | frameworks/native/services/surfaceflinger/   |
| OpenGL ES/Vulkan   | 高效图形渲染API                    | frameworks/native/opengl/, external/vulkan/  |
| Binder 优化        | 进程间通信加速（减少延迟）          | drivers/android/binder.c                     |
| Scheduler/CPUFreq  | 游戏场景调度与动态频率管理          | kernel/sched/, drivers/cpufreq/              |
| InputManager       | 输入延迟优化                       | frameworks/base/services/input/              |
| AudioTrack Fast Path | 低延迟音频通道                   | frameworks/av/media/libmedia/                |
### 厂商自研/定制优化模块
| 厂商/模块名                 | 功能/亮点                                             |
|----------------------------|------------------------------------------------------|
| 三星 Game Booster / Plugins | 帧率/温控/网络/电池/GPU智能调度，AI场景识别，专用加速策略 |
| 华为 GPU Turbo              | 绘图指令重调度，异构加速，帧率提升，功耗降低              |
| 小米 Game Turbo/Acceleration| 游戏前台优先、网络优化、动态调频、内存/通知管理、性能模式   |
| OPPO Hyper Boost / 荣耀猎人  | AI资源分配，CPU/GPU/Vsync/网络多维调度                   |
| vivo Multi-Turbo/Game Mode  | 前台资源专属、低延迟链路优化、后台进程冻结                |
| ASUS ROG Armoury Crate      | 电竞模式、帧率锁定、风扇/温控/震动/独显协同               |
### 通用&amp;高级优化能力
| 特性/模块              | 功能描述                                          |
|----------------------|---------------------------------------------------|
| 可变刷新率（VRR）    | 自适应屏幕刷新率，提升流畅性与省电                  |
| 高帧率模式支持        | 90Hz/120Hz/144Hz等高刷新率模式支持                  |
| Game SDK/Performance Tuner | 自动分析帧率、热/电/卡顿报告，开发者调优利器   |
| 录屏/直播/免打扰      | 游戏助手功能：录屏、直播、消息屏蔽、资源清理等         |
### 典型使用场景
| 场景                  | 优化内容                                                   |
|----------------------|------------------------------------------------------------|
| 启动/前台            | 自动最高性能档位、CPU/GPU全开、温控提升                    |
| 游戏过程             | 动态调频、监测帧率/发热自动降频                            |
| 网络/输入优化        | 网络加速、降低输入/显示延迟                                |
| 游戏辅助             | 录屏直播、消息管理、资源释放、适配最新GPU Driver/Shader    |

### 游戏相关的Android 模块
1. 系统服务与底层库
这些是游戏运行的基础，为应用提供核心功能。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20Game.html</guid><pubDate>Sun, 03 Aug 2025 14:03:57 +0000</pubDate></item><item><title>Android AI</title><link>https://lhmax2010.github.io/post/Android%20AI.html</link><description>### AOSP 原生内置的 AI/ML 框架
| 体系/模块      | 是否AOSP原生 | 框架主要用途             | 框架归属/分布                      | 端侧用法                  | 云端用法                  | 典型依赖          |
|----------------|:------------:|--------------------------|-------------------------------------|---------------------------|---------------------------|-------------------|
| NNAPI          | ✔️           | 端侧AI推理标准接口        | `frameworks/ml/nn/` (AOSP)         | TFLite/MediaPipe等可调用   | -                         | 硬件加速/HAL      |
| TensorFlow Lite| ❌           | 端测AI模型推理            | Google官方独立SDK（外部依赖）       | App/服务端推理、可对接NNAPI| -                         | TFLite SDK/so     |
| MediaPipe      | ❌           | AI管道/多模态推理         | Google官方独立工程（外部依赖）      | CV/音频等管道，可对接NNAPI | -                         | MediaPipe AAR/so  |
| ML Kit         | ❌           | 高层AI功能SDK（OCR/翻译等）| Google Play Services 或独立SDK      | App端AI能力封装           | -                         | Google Play Services |
| Google Assistant| ❌          | 语音助手/对话/多模态推理  | Google App/Play服务/云端服务        | 用TFLite/MediaPipe/NNAPI等| 云端TensorFlow/大模型等   | Google App/GMS    |

| 框架        | 是否 Framework 层原生模块 | 对 Framework 的集成方式             | 典型使用场景         |
| ----------- | :----------------------: | ----------------------------------- | -------------------- |
| TFLite      | 否                       | App 层/JNI/NNAPI delegate           | App 端 AI 推理       |
| MediaPipe   | 否                       | App 层/JNI                          | 实时多模态处理       |
| ML Kit      | 否                       | App 层/Google Play Service/SDK      | 高级AI封装、OCR等    |
| NNAPI       | 是                       | Framework 层唯一AI标准接口          | TFLite/厂商AI等底层  |

### 1. NNAPI（Neural Networks API）
是什么
Android 官方定义的端侧神经网络推理标准接口，为应用和 ML 框架（如 TFLite）提供统一的本地 AI 加速入口，适配硬件 NPU/GPU/DSP/CPU。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20AI.html</guid><pubDate>Sun, 03 Aug 2025 13:34:06 +0000</pubDate></item><item><title>Android Framework</title><link>https://lhmax2010.github.io/post/Android%20Framework.html</link><description>1. ActivityManager
功能：管理四大组件（Activity/Service/Broadcast/Provider）生命周期，调度进程、任务栈、前后台切换，处理ANR。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20Framework.html</guid><pubDate>Sun, 03 Aug 2025 13:04:09 +0000</pubDate></item><item><title>Android Runtime</title><link>https://lhmax2010.github.io/post/Android%20Runtime.html</link><description>1. runtime（art/runtime/）
运行逻辑：
ART 虚拟机主控层，负责 Java 类加载、对象创建、内存管理、线程管理、方法执行（解释、JIT、AOT）、异常捕获、同步、GC 协调等所有执行流的核心。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20Runtime.html</guid><pubDate>Sun, 03 Aug 2025 12:33:32 +0000</pubDate></item><item><title>Native Libraries &amp; Native Deamons</title><link>https://lhmax2010.github.io/post/Native%20Libraries%20%26%20Native%20Deamons.html</link><description>### Native Libraries 详解
Bionic libc
功能/用途：Android 专用 C 标准库，实现系统调用、字符串/内存/文件操作、动态链接等，是所有 native 层应用与守护的基础。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Native%20Libraries%20%26%20Native%20Deamons.html</guid><pubDate>Sun, 03 Aug 2025 11:05:25 +0000</pubDate></item><item><title>Android Linux Kernel 详解</title><link>https://lhmax2010.github.io/post/Android%20Linux%20Kernel%20-xiang-jie.html</link><description>### Android Linux Kernel

**1. GKI（Generic Kernel Image）**
GKI（Generic Kernel Image） 是 Android 在 Linux Kernel 基础上推出的一个标准化内核，旨在简化设备硬件驱动和系统服务的兼容性管理。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20Linux%20Kernel%20-xiang-jie.html</guid><pubDate>Sun, 03 Aug 2025 09:46:41 +0000</pubDate></item><item><title>Android 代码架构</title><link>https://lhmax2010.github.io/post/Android%20-dai-ma-jia-gou.html</link><description>### Android 架构
Refer https://source.android.com/docs/core/architecture?hl=zh-cn
![Image](https://github.com/user-attachments/assets/d62a8932-05dc-40d3-b406-57c9005daad9)

### 代码框架整理
### Linux Kernel 层
| 大类             | 子模块              | 主要功能                                 | 代码路径                                         |
|------------------|---------------------|------------------------------------------|--------------------------------------------------|
| GKI 与厂商驱动   | GKI 核心            | 通用内核，简化配置，支撑主线生态         | kernel/                                          |
| GKI 与厂商驱动   | Vendor 驱动         | 厂商专用硬件驱动，模块化加载             | vendor/ 、 hardware/                             |
| GKI 与厂商驱动   | KGSL                | 高通 Adreno GPU 驱动，管理 GPU 资源/功耗/命令 | drivers/gpu/msm/kgsl/                        |
| Android专有模块  | Binder              | 主 IPC 机制，进程间对象/RPC通信          | drivers/android/binder/                          |
| Android专有模块  | Ashmem              | 匿名共享内存（高效进程间共享）           | drivers/staging/android/ashmem.c                 |
| Android专有模块  | Lowmemorykiller     | 低内存回收（LMK，内核/用户空间）         | drivers/staging/android/lowmemorykiller.c / system/memory/lmkd/ |
| Android专有模块  | IOCTL 框架          | 标准 I/O 控制接口                        | drivers/                                         |
| Android专有模块  | 电源管理            | CPU 频率调节、wakelock、休眠唤醒         | drivers/cpufreq/ , kernel/power/                 |
| Android专有模块  | SELinux             | 强制访问控制，保障系统安全               | security/selinux/                                |
| Android专有模块  | Vendor Modules      | 各类厂商专用硬件驱动                     | vendor/ 、 hardware/                             |
| Android专有模块  | RIL                 | 无线通信接口                             | system/rild/                                     |
| 内存管理         | LMK                 | 低内存回收机制（内核/用户空间）          | drivers/staging/android/lowmemorykiller.c / system/memory/lmkd/ |
| 内存管理         | ZRAM                | 压缩内存，提升低端设备内存利用           | drivers/staging/zram/                            |
| 内存管理         | Buddy System        | 物理内存分配与合并                       | mm/compaction.c                                  |
| 内存管理         | Slab/SLUB 分配器    | 内核对象缓存池式分配                     | mm/slab.c , mm/slub.c                            |
| 内存管理         | ION                 | 多媒体/SoC物理内存分配与共享             | drivers/staging/android/ion/                     |
| 内存管理         | DMA-BUF             | 跨驱动共享物理内存标准接口               | drivers/dma-buf/                                 |
| 文件系统与存储   | EXT4                | 默认文件系统，高性能高可靠               | fs/ext4/                                         |
| 文件系统与存储   | F2FS                | 针对 Flash 优化的文件系统                | fs/f2fs/                                         |
| 文件系统与存储   | 加密文件系统        | FSCRYPT/LUKS 文件系统加密                | fs/crypto/                                       |
| 文件系统与存储   | Vold                | 存储管理守护进程，挂载/卸载/OTG管理      | system/core/vold/                                |
| 文件系统与存储   | DM-Verity           | 只读分区完整性校验，防篡改               | drivers/md/                                      |
| 文件系统与存储   | Keymaster HAL       | 密钥管理/安全生成功能                    | hardware/interfaces/security/keymint/aidl/       |
| 网络             | TCP/IP 协议栈       | IPv4/IPv6/TCP/UDP 网络通信               | net/ipv4/ , net/ipv6/                            |
| 网络             | Wi-Fi 驱动          | 无线网卡、Wi-Fi 管理                     | drivers/net/wireless/                            |
| 网络             | 蓝牙驱动            | 蓝牙协议栈驱动                           | drivers/bluetooth/                               |
| 网络             | Netfilter           | 防火墙/NAT/数据包过滤                    | net/netfilter/                                   |
| 安全性           | SELinux             | 强制访问控制                             | security/selinux/                                |
| 安全性           | HSM                 | 硬件安全模块，加密运算加速               | drivers/crypto/                                  |
| 安全性           | AppArmor（可选）    | 可选安全沙箱策略                         | security/apparmor/                               |
| 中断/硬件管理    | 中断管理            | 硬件/软件中断分发和处理                  | kernel/irq/                                      |
| 中断/硬件管理    | GPU 驱动            | Adreno/Mali 等 GPU 内核驱动              | drivers/gpu/ , drivers/gpu/msm/kgsl/             |
| 中断/硬件管理    | 传感器驱动          | 各类传感器（加速度计、陀螺仪等）         | drivers/iio/                                     |
| 中断/硬件管理    | 输入设备驱动        | 触摸屏、键盘等输入设备                   | drivers/input/                                   |

### Native Libraries 层
| 类别       | 名称             | 主要功能                           | 代码路径                                         |
|------------|------------------|------------------------------------|--------------------------------------------------|
| 基础库     | Bionic libc      | C 标准库，系统调用、内存分配       | bionic/                                          |
| 基础库     | libc++           | C++ 标准库                         | external/libcxx/                                 |
| 基础库     | libm             | 数学函数库                         | bionic/libm/                                     |
| 系统基础   | liblog           | 日志接口                           | system/core/liblog/                              |
| 系统基础   | libbinder        | Binder IPC 支持                    | frameworks/native/libs/binder/                    |
| 系统基础   | libutils         | 字符串、Mutex、引用计数等工具      | system/core/libutils/                            |
| 系统基础   | libandroid       | Native 和 Java 桥接接口            | frameworks/native/libs/android/                   |
| 系统基础   | libnativehelper  | JNI 辅助库                         | frameworks/native/libs/nativehelper/              |
| 安全      | libselinux        | SELinux 支持库                     | external/selinux/libselinux/                     |
| 安全      | libcrypto         | 加密算法库                         | external/openssl/                                |
| 安全      | libssl            | SSL/TLS 支持                       | external/openssl/                                |
| 算法/压缩 | libz              | 压缩算法库（zlib）                 | external/zlib/                                   |
| 多媒体     | libjpeg           | JPEG 图像解码                      | external/libjpeg-turbo/                          |
| 多媒体     | libpng            | PNG 图像解码                       | external/libpng/                                 |
| 多媒体     | libwebp           | WebP 图像处理                      | external/libwebp/                                |
| 多媒体     | libskia           | 2D 图形渲染                        | external/skia/                                   |
| 图形       | libEGL/libGLES    | OpenGL ES 支持                     | frameworks/native/opengl/                        |
| 图形       | libvulkan         | Vulkan 支持                        | external/vulkan/                                 |
| 摄像头     | libcamera         | 摄像头 HAL 通用库                  | external/libcamera/                              |
| 输入       | libinput          | 输入设备支持                       | system/core/libinput/                            |
| 多媒体     | libstagefright    | 多媒体编解码                       | frameworks/av/media/libstagefright/              |
| 多媒体     | libmediandk       | 多媒体原生接口                     | frameworks/av/media/ndk/                         |
| 序列化     | libprotobuf       | Protocol Buffers 序列化库          | external/protobuf/                               |
| ART        | libdexfile        | DEX 字节码解析与支持               | art/libdexfile/                                  |
| ART        | libart            | ART 虚拟机核心库                   | art/runtime/                                     |

### Native Deamons 层
| 类别           | 名称             | 主要功能                                    | 代码路径                                       |
|----------------|------------------|---------------------------------------------|------------------------------------------------|
| 启动/管理      | init             | 系统启动初始化，启动守护进程                | system/core/init/                              |
| 调试           | adbd             | ADB 调试守护进程                            | system/core/adb/                               |
| 存储           | vold             | 存储设备管理（挂载、加密、OTG等）           | system/vold/                                   |
| 网络           | netd             | 网络配置、DNS、防火墙等                      | system/netd/                                   |
| 日志           | logd             | 系统日志服务                                 | system/core/logd/                              |
| 管理           | servicemanager   | Binder 服务管理器                            | frameworks/native/cmds/servicemanager/         |
| 应用孵化       | zygote           | 应用进程孵化器，启动 Java 应用               | frameworks/base/cmds/zygote/                   |
| 图形           | surfaceflinger   | 图形合成服务，负责屏幕显示                   | frameworks/native/services/surfaceflinger/      |
| 内存           | lmkd             | Low Memory Killer Daemon 内存回收守护进程    | system/memory/lmkd/                            |
| 无线           | rild             | 无线通信守护进程（Radio Interface Layer）    | hardware/ril/                                  |
| 电池           | healthd          | 电池和健康状态监控                           | system/core/healthd/                           |
| 安全           | keystore         | 密钥/证书安全管理                            | system/security/keystore/                      |
| 安装           | installd         | APK 安装、数据目录管理                        | system/extras/installd/                        |
| DRM            | drmserver        | 数字版权管理（DRM）服务                      | frameworks/av/drm/drmserver/                   |
| 安全           | gatekeeperd      | 屏幕解锁验证（Gatekeeper HAL）               | system/gatekeeperd/                            |
| 统计           | statsd           | 统计与遥测收集服务                           | frameworks/base/cmds/statsd/                   |

### HAL(Harware Abstraction Layer) 层
| 模块             | 功能描述                                                   | 代码路径                                                          |
|------------------|------------------------------------------------------------|-------------------------------------------------------------------|
| audio            | 音频采集、播放、处理和音频硬件控制                         | hardware/interfaces/audio/aidl/                                  |
| camera           | 摄像头操作、采集、拍照、视频录制、参数调节                  | hardware/interfaces/camera/aidl/                                 |
| graphics         | 显示合成（HWC）、图形 buffer 分配、显示刷新                 | hardware/interfaces/graphics/composer/aidl/ &lt;br&gt; hardware/interfaces/graphics/allocator/aidl/ |
| light            | 屏幕、键盘、通知 LED 灯光控制                              | hardware/interfaces/light/aidl/                                  |
| vibrator         | 振动器控制（马达驱动、震感反馈）                           | hardware/interfaces/vibrator/aidl/                               |
| sensors          | 各类传感器（加速度、陀螺仪、磁力、环境、计步等）            | hardware/interfaces/sensors/aidl/                                |
| biometrics       | 指纹、人脸、虹膜等生物识别接口                             | hardware/interfaces/biometrics/fingerprint/aidl/ &lt;br&gt; hardware/interfaces/biometrics/face/aidl/ |
| bluetooth        | 蓝牙功能（扫描、配对、音频、BLE等）                        | hardware/interfaces/bluetooth/aidl/                              |
| wifi             | 无线网络（Wi-Fi）配置、扫描、连接、热点                     | hardware/interfaces/wifi/aidl/                                   |
| gnss             | 卫星定位（GPS、GLONASS、北斗、Galileo）                     | hardware/interfaces/gnss/aidl/                                   |
| radio            | 无线通信（蜂窝基带，电话、短信、数据、SIM等）               | hardware/interfaces/radio/aidl/                                  |
| nfc              | 近场通信（NFC）                                            | hardware/interfaces/nfc/aidl/                                    |
| usb              | USB 设备检测、模式切换、充电控制                           | hardware/interfaces/usb/aidl/                                    |
| thermal          | 芯片、CPU/GPU/电池等温度采集与管理                         | hardware/interfaces/thermal/aidl/                                |
| health           | 电池健康、电量、温度、电池状态采集与上报                   | hardware/interfaces/health/aidl/                                 |
| power            | 电源管理（省电模式、唤醒、休眠、boost等）                  | hardware/interfaces/power/aidl/                                  |
| keymaster        | 密钥/加密硬件支持（安全密钥生成、签名、硬件安全区）        | hardware/interfaces/security/keymint/aidl/                       |
| gatekeeper       | 锁屏密码/生物识别 gatekeeper 认证支持                      | hardware/interfaces/gatekeeper/aidl/                             |
| drm              | 数字版权管理（DRM），密钥协商、内容保护                    | hardware/interfaces/drm/aidl/                                    |
| automotive       | 车载信息娱乐、CAN 总线、仪表盘等车辆相关控制               | hardware/interfaces/automotive/                                  |
| graphics_mapper  | GraphicBuffer Mapper，图形内存映射接口                      | hardware/interfaces/graphics/mapper/aidl/                        |
| media            | 多媒体硬件加速（视频编解码、音频处理、Camera ISP）         | hardware/interfaces/media/aidl/                                  |
| configstore      | 配置信息存取，提供 SoC/HW 相关参数                         | hardware/interfaces/configstore/aidl/                            |
| display          | 显示输出（Display HAL，屏幕参数、亮度、刷新率等）           | hardware/interfaces/display/aidl/                                |
| input            | 输入设备（键盘、触控板、手写笔等）管理和事件采集           | hardware/interfaces/input/aidl/                                  |
| boot             | 设备启动、bootloader 状态、分区切换                        | hardware/interfaces/boot/aidl/                                   |
| fastboot         | fastboot 模式和接口实现                                    | hardware/interfaces/fastboot/aidl/                               |
| time             | 时间管理、RTC、系统时间设置                                 | hardware/interfaces/time/aidl/                                   |
| secure_element   | SE（安全芯片，NFC/支付/安全存储等）接口                     | hardware/interfaces/secure_element/aidl/                         |
| identity         | 身份认证、证件接口（如 eID、国密、护照等）                  | hardware/interfaces/identity/aidl/                               |
| oemlock          | OEM 锁控制（设备解锁、bootloader 锁等）                     | hardware/interfaces/oemlock/aidl/                                |
| wifi_offload     | Wi-Fi 卸载、低功耗扫描等                                   | hardware/interfaces/wifi/offload/aidl/                           |
| confirmationui   | 安全确认 UI 支持                                           | hardware/interfaces/confirmationui/aidl/                         |
| soundtrigger     | 声音唤醒（如“OK Google”热词检测）                          | hardware/interfaces/soundtrigger/aidl/                           |

### TV HAL 层
| 模块             | 功能描述                                                   | 代码路径                                                          |
|------------------|------------------------------------------------------------|-------------------------------------------------------------------|
| tv_input         | 电视输入源（HDMI、ATV、DTV、AV、Component 等）管理         | hardware/interfaces/tv/input/aidl/                                |
| tv_cec           | HDMI CEC (Consumer Electronics Control) 控制和事件          | hardware/interfaces/tv/cec/aidl/                                  |
| tv_tuner         | 电视调谐器（DVB/ATSC/ISDB）支持，频道扫描、播放             | hardware/interfaces/tv/tuner/aidl/                                |
| tv_audio          | 电视音频输入、解码、音效处理                               | hardware/interfaces/tv/audio/aidl/                                |
| tv_hdmi           | HDMI 输入检测与管理，EDID、热插拔、模式切换                | hardware/interfaces/tv/hdmi/aidl/                                 |
| tv_smartcard      | 电视智能卡（CA 解密、授权、付费电视等）接口                | hardware/interfaces/tv/smartcard/aidl/                            |
| tv_ci             | 条件接收（CAM 卡、Conditional Access）管理                 | hardware/interfaces/tv/ci/aidl/                                   |
| tv_wakeup         | TV 唤醒（遥控器、HDMI CEC 唤醒、定时唤醒等）               | hardware/interfaces/tv/wakeup/aidl/                               |
| tv_input_control  | 电视输入切换、信号状态管理                                | hardware/interfaces/tv/inputcontrol/aidl/                         |
| tv_antenna        | 天线、信号强度、信号质量检测与控制                         | hardware/interfaces/tv/antenna/aidl/                              |
| tv_overlay        | TV 画中画（PIP）、OSD、图层叠加控制                        | hardware/interfaces/tv/overlay/aidl/                              |
| tv_dvr            | 数字录像（DVR，录制电视节目、回放）                        | hardware/interfaces/tv/dvr/aidl/                                  |
| tv_hbbtv          | HbbTV（混合广播宽带电视标准）应用与数据接口                 | hardware/interfaces/tv/hbbtv/aidl/                                |
| tv_boot           | TV 专用开机流程、待机与恢复控制                            | hardware/interfaces/tv/boot/aidl/                                 |
| tv_remote         | 电视遥控器（红外/Bluetooth/语音）事件采集和管理            | hardware/interfaces/tv/remote/aidl/                               |
| tv_hdmi_arc       | HDMI ARC（音频回传通道）/eARC 支持                          | hardware/interfaces/tv/hdmi_arc/aidl/                             |

### ART(Android Runtime) 层
| 模块             | 功能描述                                                   | 代码路径                                  |
|------------------|------------------------------------------------------------|-------------------------------------------|
| runtime          | ART 虚拟机主运行时环境，负责类加载、内存管理、线程调度、异常处理、GC、JIT/AOT 执行 | art/runtime/                             |
| dex2oat          | DEX 到 OAT（本地代码）的 AOT 编译工具                       | art/dex2oat/                              |
| odrefresh        | OAT/DEX 优化与刷新的守护与工具，增量重编译与文件一致性检测   | art/odrefresh/                            |
| oatdump          | OAT 文件结构、内容及本地代码分析与调试工具                  | art/oatdump/                              |
| dalvikvm         | Dalvik 兼容入口（历史兼容层，实际调用 ART runtime）         | art/dalvikvm/                             |
| libart           | ART VM 核心运行时库与平台适配                              | art/libartbase/ &lt;br&gt; art/libartpalette/   |
| libdexfile       | DEX 字节码格式解析、操作与校验                               | art/libdexfile/                           |
| libart-compiler  | ART 编译器核心，字节码到本地代码转换、优化                   | art/compiler/                             |
| libart-disassembler | 字节码与本地指令反汇编分析                               | art/disassembler/                         |
| libartbase       | ART 基础工具、数据结构、日志、调试支持                      | art/libartbase/                           |
| libartpalette    | 平台适配接口，跨架构/OS 抽象层                              | art/libartpalette/                        |
| gc               | 垃圾回收（GC）模块，内存回收算法与调优                      | art/runtime/gc/                           |
| jit              | 即时编译（JIT），运行时热点代码本地化与优化                  | art/runtime/jit/                          |
| interpreter      | 字节码解释器，DEX 指令动态调度执行                          | art/runtime/interpreter/                   |
| imgdiag          | Image 文件分析工具（system image 校验与分析）               | art/imgdiag/                              |
| profile          | 方法/代码块热度分析、profile 数据收集与利用                  | art/profile/                              |
| quick            | 快速方法调用和内联、调用链优化等                            | art/runtime/quick/                        |
| signal_catcher   | 信号捕捉与故障转储（crash、ANR、native 信号管理）           | art/runtime/signal_catcher.cc             |
| monitor          | 对象锁、同步、Monitor 机制实现                              | art/runtime/monitor.cc                    |
| verifier         | DEX 字节码静态校验与安全验证                                | art/runtime/verifier/                     |
| debugger         | Java 调试接口 JDWP/断点/单步执行等                          | art/runtime/debugger/                     |
| trace            | 方法调用/性能追踪与分析支持                                 | art/runtime/trace/                        |
| hidden_api       | 隐藏 API 管控，防止 App 访问系统私有接口                     | art/runtime/hidden_api/                   |
| hprof            | Java 堆内存快照与分析工具（heap profiler）                  | art/runtime/hprof/                        |
| jdwp             | Java 调试线协议实现（JDWP）                                 | art/runtime/jdwp/                         |
| libcore          | Java 标准库与通用 API 实现（集合、IO、网络、XML、加密、ICU 等），为 ART/Java Framework 提供核心类库支持 | libcore/                                 |
| OAT（.oat 文件） | ART 将 DEX 字节码 AOT 编译后的产物，包含本地机器码和元数据，提升启动和执行效率 | art/dex2oat/ &lt;br&gt; art/runtime/oat_file.h &lt;br&gt; art/oatdump/ &lt;br&gt; art/odrefresh/ |
| JNI              | Java 层与 native（C/C++）代码互操作桥梁，实现方法调用、数据转换、线程/对象管理 | art/runtime/jni/ &lt;br&gt; libcore/ojluni/src/main/native/include/jni.h |
| libnativebridge  | Native Bridge 机制实现，不同架构下 native so 的兼容仿真加载，跨 ABI 支持 | art/libnativebridge/                      |
| libnativeloader  | 动态库加载与命名空间隔离机制，管理 so 加载路径、安全隔离与卸载 | art/libnativeloader/                      |

### Android Framework层
| 模块                | 功能描述                                                      | 主要代码路径                                |
|---------------------|---------------------------------------------------------------|---------------------------------------------|
| ActivityManager     | 应用组件生命周期管理、进程调度、任务栈管理、后台管控           | frameworks/base/services/core/java/com/android/server/am/         |
| PackageManager      | APK 安装/卸载、包管理、权限管理、签名校验、分区               | frameworks/base/services/core/java/com/android/server/pm/         |
| WindowManager       | 窗口/层级管理、窗口动画、输入分发、屏幕适配                    | frameworks/base/services/core/java/com/android/server/wm/         |
| InputManager        | 输入事件收集、分发、输入设备（键盘、触控、鼠标、遥控）管理      | frameworks/base/services/core/java/com/android/server/input/ &lt;br&gt; frameworks/base/core/java/android/hardware/input/ |
| DisplayManager      | 屏幕显示设备管理、投屏、分辨率切换、亮度控制                   | frameworks/base/services/core/java/com/android/server/display/    |
| PowerManager        | 电源管理、休眠/唤醒、亮度/省电控制、Wakelock                  | frameworks/base/services/core/java/com/android/server/power/      |
| NotificationManager | 通知管理、消息推送、渠道与权限控制、锁屏与前台通知             | frameworks/base/services/core/java/com/android/server/notification/ &lt;br&gt; frameworks/base/core/java/android/app/NotificationManager.java |
| AlarmManager        | 定时任务调度、闹钟服务                                         | frameworks/base/services/core/java/com/android/server/alarm/      |
| ResourceManager     | 应用与系统资源（布局、图片、字符串、样式、主题）加载与管理     | frameworks/base/core/java/android/content/res/ &lt;br&gt; frameworks/base/libs/androidfw/ &lt;br&gt; frameworks/base/services/core/java/com/android/server/ |
| LocationManager     | 定位服务、位置更新、地理围栏、GPS/网络定位                     | frameworks/base/services/core/java/com/android/server/location/   |
| ConnectivityManager | 网络连接、Wi-Fi/蜂窝/以太网、VPN、代理、网络切换               | frameworks/base/services/core/java/com/android/server/connectivity/|
| TelephonyManager    | 蜂窝网络、通话、短信、SIM 卡、信号强度                         | frameworks/opt/telephony/src/java/com/android/internal/telephony/ |
| WifiManager         | 无线网络连接、Wi-Fi 扫描、热点、状态监听                       | frameworks/opt/net/wifi/service/java/com/android/server/wifi/     |
| BluetoothManager    | 蓝牙连接、设备配对、BLE、音频控制                              | packages/modules/Bluetooth/service/java/com/android/server/bluetooth/ |
| AudioManager        | 音频策略、音量、输出/输入路由、音效                            | frameworks/base/services/core/java/com/android/server/audio/      |
| MediaSessionManager | 多媒体播放会话、媒体控制、通知交互                             | frameworks/base/services/core/java/com/android/server/media/      |
| CameraService       | 摄像头设备管理、拍照、预览、视频采集                           | frameworks/av/services/camera/libcameraservice/                  |
| SensorManager       | 传感器事件收集、数据融合、传感器策略                           | frameworks/base/services/core/java/com/android/server/sensor/     |
| JobSchedulerService | 后台任务调度、任务约束、Doze/省电兼容                         | frameworks/base/services/core/java/com/android/server/job/        |
| SystemUI            | 系统界面（状态栏、导航栏、通知栏、快设面板）                   | frameworks/base/packages/SystemUI/                               |
| PermissionManager   | 权限申请、授权、管理、特殊权限分发                             | frameworks/base/services/core/java/com/android/server/pm/permission/ |
| ContentProvider     | 跨应用数据共享、标准化数据访问接口（数据库、文件、网络等）      | frameworks/base/core/java/android/content/ContentProvider.java &lt;br&gt; frameworks/base/core/java/android/content/ |
| Views               | UI 视图系统，所有控件、布局、动画、事件分发基础                | frameworks/base/core/java/android/view/ &lt;br&gt; frameworks/base/core/java/android/widget/ |
| ClipboardService    | 剪贴板数据管理、读写、权限控制                                 | frameworks/base/services/core/java/com/android/server/clipboard/  |
| StorageManager      | 存储空间管理、分区、OTG 设备、加密、文件系统挂载               | frameworks/base/services/core/java/com/android/server/storage/    |
| MountService        | 存储挂载、卸载、监听、分区管理                                 | frameworks/base/services/core/java/com/android/server/mount/      |
| UsbService          | USB 设备检测、状态管理、MTP/PTP、权限分发                      | frameworks/base/services/usb/java/com/android/server/usb/         |
| PrintService        | 打印设备管理、打印任务、网络打印支持                           | frameworks/base/services/core/java/com/android/server/print/      |
| DevicePolicyManager | 企业设备管理、策略下发、远程锁定/擦除                          | frameworks/base/services/devicepolicy/java/com/android/server/devicepolicy/ |
| WallpaperManager    | 壁纸管理、壁纸设置、动态壁纸                                   | frameworks/base/services/core/java/com/android/server/wallpaper/  |
| AccessibilityManager| 辅助功能（无障碍）、读屏、放大镜、辅助输入                    | frameworks/base/services/core/java/com/android/server/accessibility/|
| BackupManager       | 数据备份与恢复、云备份接口                                     | frameworks/base/services/core/java/com/android/server/backup/     |
| RestrictionsManager | 家长控制、内容限制、应用限制                                  | frameworks/base/services/core/java/com/android/server/restrictions/|
| TrustManager        | 信任设备、解锁策略、设备信任级别                               | frameworks/base/services/core/java/com/android/server/trust/      |
| LockSettingsService | 锁屏设置、密码/指纹/面部识别管理                              | frameworks/base/services/core/java/com/android/server/locksettings/|
| AppOpsManager       | 应用操作权限控制、敏感操作监控                                | frameworks/base/services/core/java/com/android/server/appop/      |
| UsageStatsManager   | 应用使用统计、前后台检测、屏幕时间、限制策略                   | frameworks/base/services/usage/java/com/android/server/usage/     |
| ShortcutsManager    | 快捷方式管理、动态/固定快捷方式接口                           | frameworks/base/services/core/java/com/android/server/shortcuts/  |
| IncidentManager     | 故障报告、系统诊断、异常事件收集                              | frameworks/base/services/core/java/com/android/server/incident/   |
| StatsManager        | 性能统计、事件分析、系统指标采集                              | frameworks/base/services/core/java/com/android/server/stats/      |
| PolicyManager       | 电源/设备/安全策略统一管理接口                                | frameworks/base/services/core/java/com/android/server/policy/     |
| MediaService        | 多媒体会话管理、音视频路由、媒体资源分配与权限                 | frameworks/av/services/mediaresourcemanager/ &lt;br&gt; frameworks/base/services/core/java/com/android/server/media/ |
| MediaCodec          | 多媒体编解码标准接口，硬件加速编解码适配                      | frameworks/base/media/java/android/media/MediaCodec.java &lt;br&gt; frameworks/av/media/libstagefright/ |
| MediaExtractor      | 多媒体封装格式解析与音视频流提取                              | frameworks/base/media/java/android/media/MediaExtractor.java &lt;br&gt; frameworks/av/media/libstagefright/MediaExtractor.cpp |
| OpenMAX AL          | 多媒体硬件抽象标准接口，底层音视频硬件访问                    | frameworks/wilhelm/ &lt;br&gt; frameworks/base/media/jni/              |
。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/Android%20-dai-ma-jia-gou.html</guid><pubDate>Sun, 03 Aug 2025 08:51:33 +0000</pubDate></item><item><title>我的第一篇博客</title><link>https://lhmax2010.github.io/post/wo-de-di-yi-pian-bo-ke.html</link><description>Hellow~ My First Blog~。</description><guid isPermaLink="true">https://lhmax2010.github.io/post/wo-de-di-yi-pian-bo-ke.html</guid><pubDate>Sat, 02 Aug 2025 14:27:17 +0000</pubDate></item></channel></rss>